#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø–∞–π–ø–ª–∞–π–Ω:
1. data_processor - –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
2. model - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π DKN 
3. integrated_recommender - —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º –Ω–∞–≤—ã–∫–æ–≤
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
project_root = Path(__file__).parent.parent.parent
sys.path.append(str(project_root))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'adaptive_learning.settings')
django.setup()

from integrated_recommender import IntegratedSkillRecommender


def test_full_integration_cycle(student_id: int = 7):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô")
    print("=" * 70)
    
    print("üìã –≠—Ç–∞–ø—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1Ô∏è‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ DKN –º–æ–¥–µ–ª–∏")
    print("   2Ô∏è‚É£  –ê–Ω–∞–ª–∏–∑ –Ω–∞–≤—ã–∫–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ (BKT)")
    print("   3Ô∏è‚É£  –ü–æ–ª—É—á–µ–Ω–∏–µ DKN –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
    print("   4Ô∏è‚É£  –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    print("   5Ô∏è‚É£  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
    print()
    
    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å
    model_paths = [
        "training/models/best_model.pth",
        "../checkpoints/best_model.pth", 
        "../best_enhanced_model.pth",
        "../best_simple_model.pth"
    ]
    
    model_path = None
    for path in model_paths:
        if os.path.exists(path):
            model_path = path
            break
    
    print(f"üîç –ü–æ–∏—Å–∫ –º–æ–¥–µ–ª–∏ DKN:")
    if model_path:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å: {model_path}")
    else:
        print(f"   ‚ö†Ô∏è  –û–±—É—á–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–æ–±—É—á–µ–Ω–Ω–∞—è")
    
    print("\n" + "=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    try:
        recommender = IntegratedSkillRecommender(model_path)
        
        print(f"\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –°–¢–£–î–ï–ù–¢–ê {student_id}")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = recommender.get_recommendations(student_id, num_recommendations=5)
        
        if recommendations:
            print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(recommendations)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π!")
            
            print(f"\nüèÜ –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("-" * 40)
            
            for i, rec in enumerate(recommendations, 1):
                print(f"\n{i}. üìã {rec.task_title}")
                print(f"   üéØ –ù–∞–≤—ã–∫: {rec.skill_name}")
                print(f"   üìä –û—Å–≤–æ–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ (BKT): {rec.skill_mastery:.1%}")
                print(f"   üß† –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ DKN: {rec.dkn_prediction:.1%}")
                print(f"   üìà –°–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è: {rec.task_difficulty}")
                print(f"   ‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {rec.priority}/5")
                print(f"   üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {rec.confidence:.2f}")
                print(f"   üí≠ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:")
                print(f"      {rec.reasoning}")
            
            # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            print(f"\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
            print("-" * 30)
            
            avg_bkt = sum(r.skill_mastery for r in recommendations) / len(recommendations)
            avg_dkn = sum(r.dkn_prediction for r in recommendations) / len(recommendations)
            avg_confidence = sum(r.confidence for r in recommendations) / len(recommendations)
            
            print(f"   üìà –°—Ä–µ–¥–Ω–µ–µ –æ—Å–≤–æ–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤ (BKT): {avg_bkt:.1%}")
            print(f"   üß† –°—Ä–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ DKN: {avg_dkn:.1%}")
            print(f"   üéØ –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {avg_confidence:.2f}")
            
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
            priorities = {}
            for rec in recommendations:
                priorities[rec.priority] = priorities.get(rec.priority, 0) + 1
            
            print(f"   ‚≠ê –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤:")
            for priority, count in sorted(priorities.items()):
                print(f"      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç {priority}: {count} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
            
            # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
            print(f"\nüîç –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
            print("-" * 35)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å BKT –∏ DKN
            agreements = 0
            for rec in recommendations:
                if abs(rec.skill_mastery - rec.dkn_prediction) < 0.3:
                    agreements += 1
            
            agreement_rate = agreements / len(recommendations) if recommendations else 0
            print(f"   ü§ù –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å BKT –∏ DKN: {agreement_rate:.1%}")
            
            if agreement_rate > 0.6:
                print(f"   ‚úÖ –í—ã—Å–æ–∫–∞—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            elif agreement_rate > 0.4:
                print(f"   üîÑ –°—Ä–µ–¥–Ω—è—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            else:
                print(f"   ‚ö†Ô∏è  –ù–∏–∑–∫–∞—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            unique_skills = len(set(rec.skill_name for rec in recommendations))
            print(f"   üé® –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –Ω–∞–≤—ã–∫–æ–≤: {unique_skills} –∏–∑ {len(recommendations)}")
            
            if unique_skills == len(recommendations):
                print(f"   ‚úÖ –í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤")
            elif unique_skills > len(recommendations) // 2:
                print(f"   üîÑ –•–æ—Ä–æ—à–µ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –Ω–∞–≤—ã–∫–æ–≤")
            else:
                print(f"   ‚ö†Ô∏è  –ù–∏–∑–∫–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –Ω–∞–≤—ã–∫–æ–≤")
            
        else:
            print(f"‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã!")
            return False
        
        print(f"\n" + "=" * 70)
        print(f"üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        
        print(f"\n‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
        print(f"   üîÑ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –ë–∞–∑–∞ ‚Üí DKN ‚Üí –ù–∞–≤—ã–∫–∏ ‚Üí –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        print(f"   üéØ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö")
        print(f"   üìä –ê–Ω–∞–ª–∏–∑ BKT –¥–∞–Ω–Ω—ã—Ö –æ—Å–≤–æ–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤")
        print(f"   üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ DKN –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
        print(f"   ‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        print(f"   üéØ –û—Ü–µ–Ω–∫–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö")
        print(f"   üí≠ –ü–æ–Ω—è—Ç–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏–π")
        
        return True
        
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


def test_multiple_students():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö"""
    print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê –ù–ï–°–ö–û–õ–¨–ö–ò–• –°–¢–£–î–ï–ù–¢–ê–•")
    print("=" * 50)
    
    student_ids = [2, 7]  # –°—Ç—É–¥–µ–Ω—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
    
    for student_id in student_ids:
        print(f"\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student_id}:")
        print("-" * 30)
        
        try:
            success = test_full_integration_cycle(student_id)
            if success:
                print(f"   ‚úÖ –°—Ç—É–¥–µ–Ω—Ç {student_id}: —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω")
            else:
                print(f"   ‚ùå –°—Ç—É–¥–µ–Ω—Ç {student_id}: —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω")
        except Exception as e:
            print(f"   üí• –°—Ç—É–¥–µ–Ω—Ç {student_id}: –æ—à–∏–±–∫–∞ - {e}")


if __name__ == "__main__":
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    success = test_full_integration_cycle(student_id=7)
    
    if success:
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
        test_multiple_students()
        
        print(f"\nüèÜ –í–°–ï –¢–ï–°–¢–´ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–û–ô–î–ï–ù–´!")
        print(f"üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!")
    else:
        print(f"\nüí• –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´!")
        sys.exit(1)
