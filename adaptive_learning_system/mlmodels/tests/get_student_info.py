"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å—Ç—É–¥–µ–Ω—Ç–µ.

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
- ID —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –õ–æ–≥–∏–Ω (username)
- –ü–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
- –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ø—ã—Ç–æ–∫ –∏ –æ—Å–≤–æ–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python mlmodels/tests/get_student_info.py
    –∏–ª–∏
    python manage.py shell
    exec(open('mlmodels/tests/get_student_info.py').read())
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
def setup_django():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    project_root = Path(__file__).parent.parent.parent
    sys.path.insert(0, str(project_root))
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'adaptive_learning.settings')
    django.setup()

setup_django()

from django.contrib.auth.models import User
from student.models import StudentProfile, StudentCourseEnrollment
from mlmodels.models import TaskAttempt, StudentSkillMastery
from skills.models import Course


def get_student_info(username="alex_klementev"):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
    
    Args:
        username: –õ–æ–≥–∏–Ω —Å—Ç—É–¥–µ–Ω—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é alex_klementev)
    """
    
    print("=" * 80)
    print("üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–¢–£–î–ï–ù–¢–ï")
    print("=" * 80)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.objects.get(username=username)
        
        print("üë§ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:")
        print(f"   ‚Ä¢ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}")
        print(f"   ‚Ä¢ –õ–æ–≥–∏–Ω (username): {user.username}")
        print(f"   ‚Ä¢ –ò–º—è: {user.first_name}")
        print(f"   ‚Ä¢ –§–∞–º–∏–ª–∏—è: {user.last_name}")
        print(f"   ‚Ä¢ Email: {user.email}")
        print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if user.is_active else '–ù–µ—Ç'}")
        print(f"   ‚Ä¢ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {'–î–∞' if user.is_superuser else '–ù–µ—Ç'}")
        print(f"   ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª: {'–î–∞' if user.is_staff else '–ù–µ—Ç'}")
        print(f"   ‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {user.date_joined.strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {user.last_login.strftime('%Y-%m-%d %H:%M:%S') if user.last_login else '–ù–∏–∫–æ–≥–¥–∞'}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–æ–ª–µ
        print(f"\nüîê –ü–ê–†–û–õ–¨:")
        if user.password:
            print(f"   ‚Ä¢ –•–µ—à –ø–∞—Ä–æ–ª—è: {user.password[:50]}...")
            print(f"   ‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º: {user.password.split('$')[0] if '$' in user.password else 'Unknown'}")
            print("   ‚Ä¢ ‚ö†Ô∏è  –ü–∞—Ä–æ–ª—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω. –î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
            print("     - –õ–æ–≥–∏–Ω: alex_klementev")
            print("     - –ü–∞—Ä–æ–ª—å: test123 (–µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏)")
            print("     - –ò–ª–∏ —Å–±—Ä–æ—Å—å—Ç–µ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É Django")
        else:
            print("   ‚Ä¢ –ü–∞—Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
          # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
        try:
            student_profile = StudentProfile.objects.get(user=user)
            
            print(f"\nüéì –ü–†–û–§–ò–õ–¨ –°–¢–£–î–ï–ù–¢–ê:")
            print(f"   ‚Ä¢ ID –ø—Ä–æ—Ñ–∏–ª—è: {student_profile.id}")
            print(f"   ‚Ä¢ –ü–æ–ª–Ω–æ–µ –∏–º—è: {student_profile.full_name}")
            print(f"   ‚Ä¢ Email –ø—Ä–æ—Ñ–∏–ª—è: {student_profile.email}")
            print(f"   ‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {student_profile.organization}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if student_profile.is_active else '–ù–µ—Ç'}")
            print(f"   ‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {student_profile.created_at.strftime('%Y-%m-%d %H:%M:%S') if hasattr(student_profile, 'created_at') else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}")
            
            # –ó–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã
            enrollments = StudentCourseEnrollment.objects.filter(student=student_profile)
            print(f"\nüìö –ó–ê–ü–ò–°–ò –ù–ê –ö–£–†–°–´ ({enrollments.count()}):")
            for enrollment in enrollments:
                print(f"   ‚Ä¢ {enrollment.course.name}: {enrollment.get_status_display()}")
                print(f"     –ó–∞–ø–∏—Å–∞–Ω: {enrollment.enrolled_at.strftime('%Y-%m-%d %H:%M')}")
                if hasattr(enrollment, 'progress_percentage'):
                    print(f"     –ü—Ä–æ–≥—Ä–µ—Å—Å: {enrollment.progress_percentage}%")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫
            attempts = TaskAttempt.objects.filter(student=student_profile)
            total_attempts = attempts.count()
            correct_attempts = attempts.filter(is_correct=True).count()
            
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–ü–´–¢–û–ö:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: {total_attempts}")
            print(f"   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correct_attempts}")
            print(f"   ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {total_attempts - correct_attempts}")
            print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {correct_attempts/total_attempts*100:.1f}%" if total_attempts > 0 else "   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 0%")
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏
            if total_attempts > 0:
                recent_attempts = attempts.order_by('-completed_at')[:5]
                print(f"\nüìù –ü–û–°–õ–ï–î–ù–ò–ï –ü–û–ü–´–¢–ö–ò:")
                for attempt in recent_attempts:
                    status = "‚úÖ" if attempt.is_correct else "‚ùå"
                    time_str = attempt.completed_at.strftime('%Y-%m-%d %H:%M')
                    skills = ", ".join([skill.name for skill in attempt.task.skills.all()])
                    print(f"   {status} {attempt.task.title}")
                    print(f"      –ù–∞–≤—ã–∫–∏: {skills}")
                    print(f"      –í—Ä–µ–º—è: {time_str}, –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {attempt.time_spent}—Å")
            
            # –û—Å–≤–æ–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤
            masteries = StudentSkillMastery.objects.filter(student=student_profile)
            
            print(f"\nüß† –û–°–í–û–ï–ù–ò–ï –ù–ê–í–´–ö–û–í ({masteries.count()}):")
            
            fully_mastered = masteries.filter(current_mastery_prob__gte=0.8).order_by('-current_mastery_prob')
            if fully_mastered.exists():
                print(f"   ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –û–°–í–û–ï–ù–ù–´–ï ({fully_mastered.count()}):")
                for mastery in fully_mastered:
                    print(f"      ‚Ä¢ {mastery.skill.name}: {mastery.current_mastery_prob:.3f} ({mastery.correct_attempts}/{mastery.attempts_count})")
            
            partially_mastered = masteries.filter(
                current_mastery_prob__gte=0.5, 
                current_mastery_prob__lt=0.8
            ).order_by('-current_mastery_prob')
            if partially_mastered.exists():
                print(f"   üü° –ß–ê–°–¢–ò–ß–ù–û –û–°–í–û–ï–ù–ù–´–ï ({partially_mastered.count()}):")
                for mastery in partially_mastered:
                    print(f"      ‚Ä¢ {mastery.skill.name}: {mastery.current_mastery_prob:.3f} ({mastery.correct_attempts}/{mastery.attempts_count})")
            
            low_mastered = masteries.filter(current_mastery_prob__lt=0.5).order_by('-current_mastery_prob')
            if low_mastered.exists():
                print(f"   üî¥ –°–õ–ê–ë–û –û–°–í–û–ï–ù–ù–´–ï ({low_mastered.count()}):")
                for mastery in low_mastered:
                    print(f"      ‚Ä¢ {mastery.skill.name}: {mastery.current_mastery_prob:.3f} ({mastery.correct_attempts}/{mastery.attempts_count})")
            
        except StudentProfile.DoesNotExist:
            print("\n‚ùå –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—Ä–æ—Ñ–∏–ª—å StudentProfile –Ω–µ —Å–æ–∑–¥–∞–Ω.")
        
        print("\n" + "=" * 80)
        print("üí° –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£:")
        print("=" * 80)
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Django (–æ–±—ã—á–Ω–æ http://127.0.0.1:8000/)")
        print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É (/admin/) –∏–ª–∏ —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞")
        print(f"3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"   ‚Ä¢ –õ–æ–≥–∏–Ω: {user.username}")
        print(f"   ‚Ä¢ –ü–∞—Ä–æ–ª—å: test123 (–µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
        print("4. –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Å–±—Ä–æ—Å—å—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑:")
        print("   python manage.py changepassword alex_klementev")
        print("=" * 80)
        
        return {
            'user_id': user.id,
            'username': user.username,
            'student_profile_id': student_profile.id if hasattr(user, 'studentprofile') else None,
            'total_attempts': total_attempts,
            'skills_mastered': masteries.count()
        }
        
    except User.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ª–æ–≥–∏–Ω–æ–º '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        users = User.objects.all()
        for user in users:
            print(f"   ‚Ä¢ {user.username} ({user.first_name} {user.last_name})")
        return None


def reset_student_password(username="alex_klementev", new_password="test123"):
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    Args:
        username: –õ–æ–≥–∏–Ω —Å—Ç—É–¥–µ–Ω—Ç–∞
        new_password: –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    """
    try:
        user = User.objects.get(username=username)
        user.set_password(new_password)
        user.save()
        
        print(f"‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}' –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '{new_password}'")
        return True
        
    except User.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if sys.argv[1] == "--reset-password":
            username = sys.argv[2] if len(sys.argv) > 2 else "alex_klementev"
            password = sys.argv[3] if len(sys.argv) > 3 else "test123"
            reset_student_password(username, password)
        else:
            username = sys.argv[1]
            get_student_info(username)
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ alex_klementev
        result = get_student_info("alex_klementev")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å
        if result:
            print("\nüîß –•–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å? –í—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("python mlmodels/tests/get_student_info.py --reset-password alex_klementev test123")


if __name__ == "__main__":
    main()
