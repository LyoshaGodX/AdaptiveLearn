#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ ID: 2 (–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞)

–£–¥–∞–ª—è–µ—Ç:
- –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π (TaskAttempt)
- –í—Å–µ –∑–∞–ø–∏—Å–∏ –æ –Ω–∞–≤—ã–∫–∞—Ö (StudentSkillMastery)
- –ü—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è (StudentLearningProfile)
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –º–µ—Ç—Ä–∏–∫–∏

–í–ù–ò–ú–ê–ù–ò–ï: –û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º–∞!
"""

import os
import sys
import django
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'adaptive_learning.settings')
django.setup()

from django.contrib.auth.models import User
from student.models import StudentProfile
from mlmodels.models import TaskAttempt, StudentSkillMastery, StudentLearningProfile


def main():
    print("=" * 70)
    print("üóëÔ∏è  –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –î–ê–ù–ù–´–• –¢–ï–°–¢–û–í–û–ì–û –°–¢–£–î–ï–ù–¢–ê")
    print("=" * 70)
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    try:
        student_profile = StudentProfile.objects.get(id=2)
        print(f"üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç: {student_profile.full_name}")
        print(f"üìß Email: {student_profile.user.email}")
    except StudentProfile.DoesNotExist:
        print("‚ùå –°—Ç—É–¥–µ–Ω—Ç —Å ID=2 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("\n" + "‚îÄ" * 70)
    print("üìä –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ò–• –î–ê–ù–ù–´–•")
    print("‚îÄ" * 70)
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    attempts_count = TaskAttempt.objects.filter(student=student_profile).count()
    skills_count = StudentSkillMastery.objects.filter(student=student_profile).count()
    
    try:
        learning_profile = StudentLearningProfile.objects.get(student=student_profile)
        has_learning_profile = True
    except StudentLearningProfile.DoesNotExist:
        has_learning_profile = False
    
    print(f"üìù –ü–æ–ø—ã—Ç–æ–∫ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π: {attempts_count}")
    print(f"üß† –ó–∞–ø–∏—Å–µ–π –æ –Ω–∞–≤—ã–∫–∞—Ö: {skills_count}")
    print(f"üìà –ü—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è: {'–ï—Å—Ç—å' if has_learning_profile else '–ù–µ—Ç'}")
    
    if attempts_count == 0 and skills_count == 0 and not has_learning_profile:
        print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ —É–∂–µ –æ—á–∏—â–µ–Ω—ã!")
        return
    
    print("\n" + "‚îÄ" * 70)
    print("‚ö†Ô∏è  –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –£–î–ê–õ–ï–ù–ò–Ø")
    print("‚îÄ" * 70)
    print("–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º–∞!")
    print("–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:")
    if attempts_count > 0:
        print(f"  ‚Ä¢ {attempts_count} –ø–æ–ø—ã—Ç–æ–∫ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π")
    if skills_count > 0:
        print(f"  ‚Ä¢ {skills_count} –∑–∞–ø–∏—Å–µ–π –æ –Ω–∞–≤—ã–∫–∞—Ö (BKT-–¥–∞–Ω–Ω—ã–µ)")
    if has_learning_profile:
        print(f"  ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞")
    
    confirmation = input("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? (yes/no): ").strip().lower()
    
    if confirmation not in ['yes', 'y', '–¥–∞', '–¥']:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return
    
    print("\n" + "‚îÄ" * 70)
    print("üóëÔ∏è  –í–´–ü–û–õ–ù–ï–ù–ò–ï –£–î–ê–õ–ï–ù–ò–Ø")
    print("‚îÄ" * 70)
    
    deleted_total = 0
    
    # 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
    if attempts_count > 0:
        print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º {attempts_count} –ø–æ–ø—ã—Ç–æ–∫ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π...")
        deleted_attempts = TaskAttempt.objects.filter(student=student_profile).delete()
        deleted_count = deleted_attempts[0] if deleted_attempts[0] else 0
        deleted_total += deleted_count
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted_count} –ø–æ–ø—ã—Ç–æ–∫")
    
    # 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ –Ω–∞–≤—ã–∫–∞—Ö
    if skills_count > 0:
        print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º {skills_count} –∑–∞–ø–∏—Å–µ–π –æ –Ω–∞–≤—ã–∫–∞—Ö...")
        deleted_skills = StudentSkillMastery.objects.filter(student=student_profile).delete()
        deleted_count = deleted_skills[0] if deleted_skills[0] else 0
        deleted_total += deleted_count
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted_count} –∑–∞–ø–∏—Å–µ–π –æ –Ω–∞–≤—ã–∫–∞—Ö")
    
    # 3. –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è
    if has_learning_profile:
        print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è...")
        deleted_profile = StudentLearningProfile.objects.filter(student=student_profile).delete()
        deleted_count = deleted_profile[0] if deleted_profile[0] else 0
        deleted_total += deleted_count
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted_count} –ø—Ä–æ—Ñ–∏–ª—å –æ–±—É—á–µ–Ω–∏—è")
    
    print("\n" + "‚îÄ" * 70)
    print("üîÑ –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê")
    print("‚îÄ" * 70)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω—ã
    final_attempts = TaskAttempt.objects.filter(student=student_profile).count()
    final_skills = StudentSkillMastery.objects.filter(student=student_profile).count()
    final_profile = StudentLearningProfile.objects.filter(student=student_profile).count()
    
    print(f"üìù –ü–æ–ø—ã—Ç–æ–∫ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π: {final_attempts}")
    print(f"üß† –ó–∞–ø–∏—Å–µ–π –æ –Ω–∞–≤—ã–∫–∞—Ö: {final_skills}")
    print(f"üìà –ü—Ä–æ—Ñ–∏–ª–µ–π –æ–±—É—á–µ–Ω–∏—è: {final_profile}")
    
    if final_attempts == 0 and final_skills == 0 and final_profile == 0:
        print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
    else:
        print("\n‚ö†Ô∏è  –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
    
    print("\n" + "‚îÄ" * 70)
    print("üìä –ò–¢–û–ì–û")
    print("‚îÄ" * 70)
    print(f"üóëÔ∏è  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {deleted_total}")
    print(f"üë§ –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞: –°–æ—Ö—Ä–∞–Ω–µ–Ω (–Ω–µ —É–¥–∞–ª–µ–Ω)")
    print(f"üïê –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    print("\n" + "=" * 70)
    print("üéâ –û–ß–ò–°–¢–ö–ê –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 70)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("\nüí° –ß—Ç–æ –¥–∞–ª—å—à–µ:")
    print("   ‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤")
    print("   ‚Ä¢ –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ø—ã—Ç–∫–∏ —Å –ø–æ–º–æ—â—å—é generate_test_attempts.py")
    print("   ‚Ä¢ BKT-–º–æ–¥–µ–ª—å –±—É–¥–µ—Ç –æ–±—É—á–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ –ø—Ä–∏ –Ω–æ–≤—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö")


if __name__ == '__main__':
    main()
