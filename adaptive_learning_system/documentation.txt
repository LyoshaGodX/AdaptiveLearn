=====================================================
ДОКУМЕНТАЦИЯ ПРОЕКТА "АДАПТИВНАЯ СИСТЕМА ОБУЧЕНИЯ"
=====================================================

СОДЕРЖАНИЕ:
1. ОБЩЕЕ ОПИСАНИЕ ПРОЕКТА
2. РЕАЛИЗОВАННЫЙ ФУНКЦИОНАЛ
   2.1 Модели данных
   2.2 Граф навыков
   2.3 Управление навыками
   2.4 API и взаимодействие
   2.5 Пользовательский интерфейс
3. ТЕХНОЛОГИЧЕСКИЙ СТЕК
4. ПЛАНЫ РАЗВИТИЯ
   4.1 Алгоритмы машинного обучения
   4.2 Модуль адаптивного обучения
   4.3 Модуль аналитики
   4.4 Интеграция с внешними системами

=====================================================
1. ОБЩЕЕ ОПИСАНИЕ ПРОЕКТА
=====================================================

"AdaptiveLearn" представляет собой систему адаптивного обучения, разрабатываемую с целью персонализации учебного процесса с использованием алгоритмов машинного обучения. Система направлена на анализ уровня знаний студентов и автоматическую адаптацию учебных материалов и задач на основе их индивидуальных потребностей и способностей.

Основная концепция: представить учебные материалы и навыки в виде взаимосвязанного графа, где каждый навык может быть предпосылкой для освоения других навыков. Система отслеживает прогресс студента по каждому навыку и определяет оптимальный путь обучения.

=====================================================
2. РЕАЛИЗОВАННЫЙ ФУНКЦИОНАЛ
=====================================================

2.1 Модели данных
-----------------

В системе реализованы следующие основные модели данных:

1) Course (Курс):
   - id: уникальный идентификатор курса
   - name: название курса
   - description: описание курса

2) Skill (Навык):
   - id: уникальный идентификатор навыка
   - name: название навыка
   - description: описание навыка
   - is_base: флаг, указывающий является ли навык базовым
   - courses: ManyToMany связь с моделью Course, указывает к каким курсам относится навык
   - prerequisites: ManyToMany связь с моделью Skill (self), указывает на навыки-предпосылки

Отношения между моделями:
- Курс может содержать множество навыков
- Навык может относиться к нескольким курсам
- Навыки имеют иерархическую структуру (граф зависимостей)

2.2 Граф навыков
-----------------

Реализована интерактивная визуализация графа зависимостей навыков с использованием библиотеки Vis.js:

- Отображение навыков в виде узлов графа
- Отображение зависимостей между навыками в виде направленных рёбер
- Цветовая дифференциация базовых и прикладных навыков
- Фильтрация графа по курсам
- Фокусировка на конкретном навыке с отображением его предпосылок и зависимых навыков
- Интерактивное взаимодействие с графом (масштабирование, перемещение, выбор узлов)
- Оптимизация расположения узлов для лучшей читаемости

2.3 Управление навыками
-----------------------

Реализован интерфейс администрирования для работы с навыками:

- Просмотр списка всех навыков
- Фильтрация списка навыков по курсам и поиск по названию
- Создание новых навыков
- Редактирование существующих навыков
- Удаление навыков
- Управление зависимостями между навыками:
  * Добавление предпосылок для навыка
  * Добавление зависимых навыков
  * Удаление связей между навыками
- Привязка навыков к курсам

2.4 API и взаимодействие
------------------------

Реализованы следующие API-эндпоинты для взаимодействия с системой:

1) Управление навыками:
   - /api/skills/{skill_id}/courses/ - получение курсов, связанных с навыком
   - /api/skills/{skill_id}/details/ - получение детальной информации о навыке
   - /api/add_prerequisite/ - добавление предпосылки для навыка
   - /api/remove_prerequisite/ - удаление предпосылки для навыка

2) Маршруты страниц:
   - / - главная страница со списком навыков и графом
   - /edit/ - страница редактирования навыков
   - /edit_skill/ - эндпоинт для обработки формы создания/редактирования навыка
   - /delete_skill/ - эндпоинт удаления навыка
   - /update_skill_courses/ - эндпоинт обновления списка курсов для навыка

2.5 Пользовательский интерфейс
------------------------------

Реализован современный адаптивный пользовательский интерфейс с использованием Tailwind CSS:

- Главная страница:
  * Интерактивный граф навыков
  * Фильтр по курсам
  * Индикатор загрузки для графа
  * Кнопки управления графом (масштабирование, сброс, центрирование)
  * Информационная панель о выбранном навыке

- Страница редактирования:
  * Список навыков с фильтрацией и поиском
  * Детальная информация о выбранном навыке
  * Модальные окна для создания/редактирования навыка
  * Модальные окна для управления предпосылками и зависимыми навыками
  * Подтверждение удаления навыка

- Общие элементы:
  * Навигационная панель
  * Адаптивный дизайн для различных устройств
  * Уведомления о результатах операций
  * Кнопки действий с иконками
  * Анимации для модальных окон

=====================================================
3. ТЕХНОЛОГИЧЕСКИЙ СТЕК
=====================================================

Текущая реализация использует следующие технологии:

1) Бэкенд:
   - Python 3.11+
   - Django 5.2.1
   - SQLite (для разработки)

2) Фронтенд:
   - HTML5
   - JavaScript (ES6)
   - Tailwind CSS
   - Font Awesome (иконки)
   - Vis.js (визуализация графа)

3) Инструменты:
   - Pydot и Graphviz для работы с DOT-файлами
   - Django-extensions для расширенного функционала Django

4) Дополнительные библиотеки:
   - JSON для сериализации данных
   - CSRF-защита для API запросов

=====================================================
4. ПЛАНЫ РАЗВИТИЯ
=====================================================

4.1 Алгоритмы машинного обучения
-------------------------------

Планируется интеграция следующих алгоритмов машинного обучения:

1) Deep Q-Learning (DQN):
   - Рекомендательный агент для определения оптимальных задач для студента
   - Обучение с подкреплением для улучшения рекомендаций на основе успехов студента
   - Архитектура: CNN + 2 полносвязных слоя с выходом q-values для N действий
   - Возможность fine-tune головы модели

2) Bayesian Knowledge Tracing (BKT):
   - Отслеживание уровня освоения каждого навыка студентом
   - Обновление информации о состоянии знаний студента
   - Построение на PyMC3 bayesian модели
   - Поддержка параметров skill_mastery, guessing_p, residual_k

3) Few-Shot Learning:
   - Быстрая адаптация модели к новому студенту на основе минимальных данных
   - MAML-style адаптация с 3 шагами SGD
   - Learning-rate 1e-4 для эффективной настройки

4) LLM-объяснения:
   - Использование языковой модели для генерации объяснений рекомендаций
   - LoRA-адаптированная 7B-LLM модель
   - Ответы ограничены 200 символами для оптимизации работы
   - Инференс < 30 мс на GPU T4

4.2 Модуль адаптивного обучения
------------------------------

Планируется разработка полноценного модуля адаптивного обучения:

1) Начальное тестирование:
   - Определение стартового уровня знаний студента
   - Инициализация моделей на основе результатов тестирования
   - Формирование индивидуальной траектории обучения

2) Система заданий:
   - Библиотека разноуровневых заданий для каждого навыка
   - Автоматическая генерация вариаций заданий
   - Постепенное усложнение материала

3) Экспертная система:
   - Автоматическая оценка выполненных заданий
   - Гибридная система на основе Rule + XGBoost
   - Возврат TaskResult с оценкой, временем выполнения и метаданными
   - Возможность ручной коррекции оценок экспертом

4) Система обратной связи:
   - Анализ ошибок студента
   - Генерация подсказок на основе типичных ошибок
   - Адаптивная помощь в зависимости от уровня студента

4.3 Модуль аналитики
-------------------

Планируется создание аналитической подсистемы:

1) Мониторинг прогресса:
   - Дашборды с визуализацией прогресса студента
   - Отслеживание времени, затраченного на каждый навык
   - Анализ динамики освоения различных типов навыков

2) Аналитика для преподавателей:
   - Выявление проблемных мест в обучении
   - Статистика по группам студентов
   - Сравнительный анализ эффективности различных подходов

3) Хранилище данных:
   - PostgreSQL для структурированных данных
   - MongoDB для истории и JSON-статистики
   - ClickHouse + Superset/Metabase для аналитики

4.4 Интеграция с внешними системами
----------------------------------

Планируется разработка следующих интеграций:

1) API для внешних систем:
   - gRPC-эндпоинт Recommend(state)->task_id
   - gRPC-эндпоинт Feedback(task_result)
   - REST API для получения статистики и прогресса

2) Система масштабирования:
   - Микросервисная архитектура
   - Контейнеризация с Docker
   - Kubernetes для оркестрации
   - Auto-scaling для ML-сервисов

=====================================================
ЗАКЛЮЧЕНИЕ
=====================================================

Проект "AdaptiveLearn" находится на начальной стадии разработки, с реализованными базовыми компонентами для управления навыками и их зависимостями. В дальнейшем планируется существенное расширение функциональности за счет интеграции алгоритмов машинного обучения, разработки модуля адаптивного обучения и системы аналитики.

Основной акцент будет сделан на персонализацию обучения, оптимизацию образовательных траекторий и предоставление актуальной обратной связи как студентам, так и преподавателям. Проект имеет потенциал для применения в различных образовательных контекстах, от корпоративного обучения до высшего образования.

Дата составления документации: 22 мая 2025 г.
