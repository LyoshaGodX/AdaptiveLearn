digraph SkillsGraph {
    rankdir=TB;
    node [shape=box, style=filled, fillcolor="#f0f0f0", fontname="Arial"];

    // Базовые навыки
    "Переменные и типы данных";
    "Операторы и выражения";
    "Условные операторы";
    "Циклы";
    "Функции и процедуры";
    "Обработка ошибок";
    "Модули и пакеты";
    "Работа с файлами";
    "Логические операторы";
    "Списки и словари";
    "Введение в ООП";
    "Объектно-ориентированное программирование";
    "Основы алгоритмов";
    "Сложность алгоритмов";
    "Рекурсия";

    // Специфические навыки для курса "Основы программирования на Python"
    "Работа с вводом/выводом данных";
    "Примитивы сериализации (JSON, CSV)";
    "Контейнеры данных (tuple, set)";
    "Регулярные выражения";
    "Работа с библиотеками Python (math, random)";

    // Специфические навыки для курса "Алгоритмы и структуры данных"
    "Деревья (обход, поиск)";
    "Графы (поиск в ширину и глубину)";
    "Хэш-таблицы";
    "Сортировки (быстрая, пузырьковая, слиянием)";
    "Поиск оптимального пути (A*, Dijkstra)";

    // Специфические навыки для курса "Введение в машинное обучение"
    "Основы регрессии";
    "Классификация данных";
    "Методы кластеризации";
    "Введение в нейросети";
    "Обработка признаков (Feature Engineering)";

    // Базовые зависимости между навыками (сохраняем существующие)
    "Переменные и типы данных" -> "Операторы и выражения";
    "Операторы и выражения" -> "Условные операторы";
    "Операторы и выражения" -> "Циклы";
    "Условные операторы" -> "Функции и процедуры";
    "Циклы" -> "Функции и процедуры";
    "Функции и процедуры" -> "Обработка ошибок";
    "Функции и процедуры" -> "Модули и пакеты";
    "Модули и пакеты" -> "Работа с файлами";
    "Модули и пакеты" -> "Работа с библиотеками Python (math, random)";
    "Логические операторы" -> "Условные операторы";
    "Списки и словари" -> "Циклы";
    "Списки и словари" -> "Функции и процедуры";
    "Введение в ООП" -> "Объектно-ориентированное программирование";
    "Основы алгоритмов" -> "Сложность алгоритмов";
    "Основы алгоритмов" -> "Рекурсия";
    "Рекурсия" -> "Деревья (обход, поиск)";

    // Зависимости для курса "Основы программирования на Python" (сохраняем существующие)
    "Работа с вводом/выводом данных" -> "Примитивы сериализации (JSON, CSV)";
    "Контейнеры данных (tuple, set)" -> "Списки и словари";
    "Регулярные выражения" -> "Работа с файлами";

    // Зависимости для курса "Алгоритмы и структуры данных" (сохраняем существующие)
    "Сложность алгоритмов" -> "Сортировки (быстрая, пузырьковая, слиянием)";
    "Сортировки (быстрая, пузырьковая, слиянием)" -> "Поиск оптимального пути (A*, Dijkstra)";
    "Деревья (обход, поиск)" -> "Графы (поиск в ширину и глубину)";
    "Графы (поиск в ширину и глубину)" -> "Поиск оптимального пути (A*, Dijkstra)";
    "Хэш-таблицы" -> "Списки и словари";

    // Зависимости для курса "Введение в машинное обучение" (сохраняем существующие)
    "Сложность алгоритмов" -> "Основы регрессии";
    "Сложность алгоритмов" -> "Классификация данных";
    "Сложность алгоритмов" -> "Методы кластеризации";
    "Объектно-ориентированное программирование" -> "Введение в нейросети";
    "Списки и словари" -> "Обработка признаков (Feature Engineering)";
    "Работа с библиотеками Python (math, random)" -> "Обработка признаков (Feature Engineering)";
    
    // ДОПОЛНИТЕЛЬНЫЕ СВЯЗИ ДЛЯ BKT-МОДЕЛИ
    
    // Дополнительные базовые зависимости
    "Переменные и типы данных" -> "Списки и словари";
    "Переменные и типы данных" -> "Логические операторы";
    "Логические операторы" -> "Циклы";
    "Обработка ошибок" -> "Работа с файлами";
    "Циклы" -> "Рекурсия";
    "Основы алгоритмов" -> "Объектно-ориентированное программирование";
    "Переменные и типы данных" -> "Контейнеры данных (tuple, set)";
    "Циклы" -> "Списки и словари";
    
    // Дополнительные связи между базовыми и специфическими навыками
    "Списки и словари" -> "Примитивы сериализации (JSON, CSV)";
    "Работа с файлами" -> "Примитивы сериализации (JSON, CSV)";
    "Операторы и выражения" -> "Регулярные выражения";
    "Функции и процедуры" -> "Работа с библиотеками Python (math, random)";
    "Функции и процедуры" -> "Основы регрессии";
    "Сложность алгоритмов" -> "Хэш-таблицы";
    "Функции и процедуры" -> "Методы кластеризации";
    "Рекурсия" -> "Графы (поиск в ширину и глубину)";
    "Циклы" -> "Сортировки (быстрая, пузырьковая, слиянием)";
    "Логические операторы" -> "Поиск оптимального пути (A*, Dijkstra)";
    
    // Связи между специфическими навыками разных курсов
    "Регулярные выражения" -> "Обработка признаков (Feature Engineering)";
    "Примитивы сериализации (JSON, CSV)" -> "Обработка признаков (Feature Engineering)";
    "Хэш-таблицы" -> "Методы кластеризации";
    "Поиск оптимального пути (A*, Dijkstra)" -> "Введение в нейросети";
    "Сортировки (быстрая, пузырьковая, слиянием)" -> "Классификация данных";
    "Графы (поиск в ширину и глубину)" -> "Методы кластеризации";
    "Деревья (обход, поиск)" -> "Классификация данных";
    
    // Дополнительные связи внутри курса "Введение в машинное обучение"
    "Основы регрессии" -> "Классификация данных";
    "Классификация данных" -> "Методы кластеризации";
    "Методы кластеризации" -> "Введение в нейросети";
    "Обработка признаков (Feature Engineering)" -> "Основы регрессии";
    "Обработка признаков (Feature Engineering)" -> "Классификация данных";
    
    // Дополнительные связи внутри курса "Алгоритмы и структуры данных"
    "Деревья (обход, поиск)" -> "Сортировки (быстрая, пузырьковая, слиянием)";
    "Сортировки (быстрая, пузырьковая, слиянием)" -> "Хэш-таблицы";
    
    // Дополнительные связи внутри курса "Основы программирования на Python"
    "Работа с вводом/выводом данных" -> "Регулярные выражения";
    "Контейнеры данных (tuple, set)" -> "Работа с библиотеками Python (math, random)";
}
